{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "51c72b1fdfc8a0d2a9a7e640144db079",
    "entities": [
      {
        "tableName": "GardenPlantingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`garden_planting_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `plant_date` INTEGER NOT NULL, `plant_id` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "gardenPlantingId",
            "columnName": "garden_planting_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "plantDate",
            "columnName": "plant_date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "plantId",
            "columnName": "plant_id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "garden_planting_id"
          ]
        },
        "indices": [
          {
            "name": "index_GardenPlantingEntity_plant_id",
            "unique": false,
            "columnNames": [
              "plant_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_GardenPlantingEntity_plant_id` ON `${TABLE_NAME}` (`plant_id`)"
          }
        ]
      },
      {
        "tableName": "PhotoEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`author_id` TEXT NOT NULL, `author_name` TEXT NOT NULL, `image_url` TEXT NOT NULL, `photo_id` TEXT NOT NULL, `plant_name` TEXT NOT NULL, PRIMARY KEY(`photo_id`))",
        "fields": [
          {
            "fieldPath": "authorId",
            "columnName": "author_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "authorName",
            "columnName": "author_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "image_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "photoId",
            "columnName": "photo_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "plantName",
            "columnName": "plant_name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "photo_id"
          ]
        }
      },
      {
        "tableName": "PhotoRemoteKeysEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`next_key` INTEGER, `photo_id` TEXT NOT NULL, `previous_key` INTEGER, PRIMARY KEY(`photo_id`), FOREIGN KEY(`photo_id`) REFERENCES `PhotoEntity`(`photo_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "nextKey",
            "columnName": "next_key",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "photoId",
            "columnName": "photo_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "previousKey",
            "columnName": "previous_key",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "photo_id"
          ]
        },
        "foreignKeys": [
          {
            "table": "PhotoEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "photo_id"
            ],
            "referencedColumns": [
              "photo_id"
            ]
          }
        ]
      },
      {
        "tableName": "PhotoRemoteOrderEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`photo_id` TEXT NOT NULL, `remote_order` INTEGER NOT NULL, PRIMARY KEY(`photo_id`), FOREIGN KEY(`photo_id`) REFERENCES `PhotoEntity`(`photo_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "photoId",
            "columnName": "photo_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "remoteOrder",
            "columnName": "remote_order",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "photo_id"
          ]
        },
        "foreignKeys": [
          {
            "table": "PhotoEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "photo_id"
            ],
            "referencedColumns": [
              "photo_id"
            ]
          }
        ]
      },
      {
        "tableName": "PlantEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`description` TEXT NOT NULL, `grow_zone_number` INTEGER NOT NULL, `image_url` TEXT NOT NULL, `plant_id` TEXT NOT NULL, `plant_name` TEXT NOT NULL, `watering_interval_days` INTEGER NOT NULL, PRIMARY KEY(`plant_id`))",
        "fields": [
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "growZoneNumber",
            "columnName": "grow_zone_number",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "image_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "plantId",
            "columnName": "plant_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "plantName",
            "columnName": "plant_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "wateringIntervalDays",
            "columnName": "watering_interval_days",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "plant_id"
          ]
        }
      }
    ],
    "views": [
      {
        "viewName": "GardenPlantingItemView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT PlantEntity.description AS description, GardenPlantingEntity.garden_planting_id AS garden_planting_id, PlantEntity.grow_zone_number AS grow_zone_number, PlantEntity.image_url AS image_url, GardenPlantingEntity.plant_date AS plant_date, GardenPlantingEntity.plant_id AS plant_id, PlantEntity.plant_name AS plant_name, PlantEntity.watering_interval_days AS watering_interval_days FROM GardenPlantingEntity LEFT JOIN PlantEntity ON PlantEntity.plant_id = GardenPlantingEntity.plant_id"
      },
      {
        "viewName": "PhotoItemView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT PhotoEntity.author_id AS author_id, PhotoEntity.author_name AS author_name, PhotoEntity.image_url AS image_url, PhotoEntity.photo_id AS photo_id, PhotoEntity.plant_name AS plant_name, PhotoRemoteOrderEntity.remote_order AS remote_order FROM PhotoEntity LEFT JOIN PhotoRemoteOrderEntity ON PhotoRemoteOrderEntity.photo_id = PhotoEntity.photo_id"
      },
      {
        "viewName": "PlantItemView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT PlantEntity.description AS description, PlantEntity.grow_zone_number AS grow_zone_number, PlantEntity.image_url AS image_url, GardenPlantingEntity.plant_date AS plant_date, PlantEntity.plant_id AS plant_id, PlantEntity.plant_name AS plant_name, PlantEntity.watering_interval_days AS watering_interval_days FROM PlantEntity LEFT JOIN GardenPlantingEntity ON GardenPlantingEntity.plant_id = PlantEntity.plant_id"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '51c72b1fdfc8a0d2a9a7e640144db079')"
    ]
  }
}